apiVersion: v1
kind: ServiceAccount
metadata:
  name: promtail
  namespace: microdemo
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: promtail
rules:
  - apiGroups: [""]
    resources: ["pods", "nodes"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: promtail
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: promtail
subjects:
  - kind: ServiceAccount
    name: promtail
    namespace: microdemo
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: promtail
  namespace: microdemo
spec:
  selector:
    matchLabels: { app: promtail }
  template:
    metadata:
      labels: { app: promtail }
    spec:
      serviceAccountName: promtail
      containers:
        - name: promtail
          image: grafana/promtail:2.9.8
          args:
            - -config.file=/etc/promtail/config.yaml
          volumeMounts:
            - name: varlog
              mountPath: /var/log
            - name: docker
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: config
              mountPath: /etc/promtail
      volumes:
        - name: varlog
          hostPath:
            path: /var/log
        - name: docker
          hostPath:
            path: /var/lib/docker/containers
        - name: config
          configMap:
            name: promtail-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: promtail-config
  namespace: microdemo
data:
  config.yaml: |
    server:
      http_listen_port: 9080
    clients:
      - url: http://loki.microdemo.svc.cluster.local:3100/loki/api/v1/push
    positions:
      filename: /tmp/positions.yaml
    scrape_configs:
      - job_name: kubernetes-pods
        static_configs:
          - targets:
              - localhost
            labels:
              job: varlogs
              __path__: /var/log/containers/*.log
